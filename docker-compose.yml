version: "3.9"

services:
  db:
    image: public.ecr.aws/docker/library/postgres:14.19-alpine3.21
    container_name: mini_data_catalog_db
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "5432:5432"
    networks:
      - backend

  redis:
    image: public.ecr.aws/docker/library/redis:latest
    container_name: mini_data_catalog_redis
    restart: always
    ports:
      - "6379:6379"
    networks:
      - backend

  postfix:
    image: eeacms/postfix
    container_name: mini_data_catalog_smtp
    restart: always
    env_file:
      - .env
    ports:
      - "25:25"
    networks:
      - backend

  app:
    build:
      context: .
      dockerfile: dockerfile.application
    container_name: mini_data_catalog
    volumes:
      - .:/app
      - shared_uploads:${TMP_FILE_PATH}
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - postfix
    networks:
      - backend

  celery:
    build:
      context: .
      dockerfile: dockerfile.celery
    container_name: mini_data_catalog_celery
    volumes:
      - .:/app
      - shared_uploads:${TMP_FILE_PATH}
    env_file:
      - .env
    depends_on:
      - redis
    networks:
      - backend

volumes:
  postgres_data:
  shared_uploads:

networks:
  backend:
    driver: bridge
